# ============================================================================
# .gitignore para Projeto "Tô De Olho" - Plataforma de Transparência Política
# Go + Next.js + PostgreSQL + Redis + Docker
# ============================================================================

# ===========================
# AMBIENTE E CONFIGURAÇÕES
# ===========================

# Variáveis de ambiente
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env

# Logs gerais
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# ===========================
# BACKEND GO
# ===========================

# Binários Go
*.exe
*.exe~
*.dll
*.so
*.dylib
main
to-de-olho-backend
to-de-olho-*

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out
coverage.txt
coverage.html

# Go workspace file
go.work
go.work.sum

# Dependency directories (vendoring)
vendor/

# IDE
.vscode/settings.json
.idea/
*.swp
*.swo
*~

# ===========================
# FRONTEND NEXT.JS
# ===========================

# Dependencies
frontend/node_modules/
frontend/.pnp
frontend/.pnp.js

# Production
frontend/.next/
frontend/out/
frontend/build
frontend/dist

# Misc
frontend/.DS_Store
frontend/*.tsbuildinfo
frontend/next-env.d.ts

# Vercel
frontend/.vercel

# Turbopack
frontend/.next

# TypeScript
frontend/*.tsbuildinfo

# ESLint
frontend/.eslintcache

# Testing
frontend/coverage/
frontend/.nyc_output

# Storybook
frontend/storybook-static

# ===========================
# DOCKER E INFRAESTRUTURA
# ===========================

# Docker volumes e dados persistentes
postgres_data/
redis_data/
rabbitmq_data/
grafana_data/
prometheus_data/

# Docker override files
docker-compose.override.yml
docker-compose.*.override.yml

# Container logs
docker-logs/

# ===========================
# BANCO DE DADOS
# ===========================

# PostgreSQL
*.sql
*.backup
*.dump
pg_log/
postgresql-*.log

# SQLite
*.sqlite
*.sqlite3
*.db

# Database backups
backups/
*.bak

# ===========================
# CACHE E TEMPORÁRIOS
# ===========================

# Redis dump
dump.rdb
appendonly.aof

# Temporary files
tmp/
temp/
*.tmp
*.temp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ===========================
# MONITORAMENTO E LOGS
# ===========================

# Prometheus data
prometheus/data/

# Grafana data
grafana/data/

# Application logs
logs/
*.log

# ===========================
# SEGURANÇA
# ===========================

# Certificados e chaves
*.key
*.pem
*.crt
*.p12
*.pfx

# Secrets
secrets/
credentials/
.secrets/

# ===========================
# DESENVOLVIMENTO
# ===========================

# VS Code
.vscode/
!.vscode/settings.json.example
!.vscode/launch.json.example

# JetBrains
.idea/
*.iml
*.iws
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# ===========================
# TESTES E COVERAGE
# ===========================

# Test coverage
coverage/
.coverage
.nyc_output
htmlcov/

# Jest
jest.config.js.bak

# Go test files
*_test.go.bak

# ===========================
# BUILD E DEPLOY
# ===========================

# Build artifacts
build/
dist/
target/

# Kubernetes secrets
k8s/secrets/
*.yaml.bak
*.yml.bak

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# ===========================
# DOCUMENTAÇÃO E NOTAS
# ===========================

# Notas pessoais
NOTES.md
TODO.md
PRIVATE-*.md

# Documentação temporária
docs/temp/
docs/drafts/

# ===========================
# ESPECÍFICO DO PROJETO
# ===========================

# Dados de teste
test-data/
mock-data/
sample-data/

# Arquivos de configuração local
config.local.json
config.dev.json

# Scripts temporários
scripts/temp/
scripts/test/

# ===========================
# NPM E NODE
# ===========================

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# ===========================
# OUTROS FRAMEWORKS
# ===========================

# Python (se usar scripts utilitários)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# Ruby (se usar scripts utilitários)
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# ===========================
# EXCLUIR APENAS ESTES ARQUIVOS
# ===========================

# Manter alguns arquivos importantes
!.gitkeep
!.env.example
!docker-compose.example.yml
!README.md
!LICENSE
!.github/
!docs/
!scripts/example/
